<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false"
    xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    
    xsi:schemaLocation="
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/util 
            http://www.springframework.org/schema/util/spring-util-3.0.xsd
            http://www.springframework.org/schema/security 
            http://www.springframework.org/schema/security/spring-security-2.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
            http://www.springframework.org/schema/websocket
            http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd
            http://www.springframework.org/schema/mvc   
		    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <description><![CDATA[
        This file imports all the application context resources you need.
        For your own application you may not want to have all these features enabled.
        You can either
            * remove the unneeded components
            * create a new file with the right components and configure this new file in 
                . web.xml
                . main.java
                . BaseTest.java
    ]]></description>
    
    <!-- 这个是说明静态文件访问, 如果不写启动项目就会抛出
    "No mapping found for HTTP request with URI [/] in DispatcherServlet with name ” -->
    <mvc:default-servlet-handler/>
    
    <!-- 如果使用注解的方式配置, 那么就打开这个自动扫描目录 -->
    <context:component-scan base-package="ws" /> 
    
    <!-- 如果使用xml配置的方式, 就打开下面这两组配置. 上面一组是使用原生ws的api调用, 下面一组是指支持sockjs的方式调用 -->
    <!-- 如果不使用, 就需要写MyWebSocketConfig类,  -->
   <!-- <websocket:handlers >
        <websocket:mapping path="/websocket" handler="demoWSHandler"/>
         <websocket:handshake-interceptors>
            <bean class="ws.HandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    
    <websocket:handlers>
        <websocket:mapping path="/sockjs/websocket" handler="demoWSHandler"/>
         <websocket:handshake-interceptors>
            <bean class="ws.HandshakeInterceptor"/>
        </websocket:handshake-interceptors>
        <websocket:sockjs/>
    </websocket:handlers>
    
    消息处理类
    <bean id="demoWSHandler" class="ws.MyWebSocketHandler"/>  -->
     
	</beans>